services:
  postgresql:
    container_name: ms_pg_sql
    platform: linux/amd64
    image: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: Admin@123
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped

  pgadmin:
    container_name: ms_pgadmin
    platform: linux/amd64
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped

  kafka:
    platform: linux/amd64
    image: 'bitnami/kafka:3.7.0'
    container_name: kafka
    hostname: kafka
    ports:
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8050:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      KAFKA_CLUSTERS_0_NAME: "local-kafka"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
      KAFKA_CLUSTERS_0_ZOOKEEPER: ""

  redis:
    platform: linux/amd64
    image: redis:7.4.2
    container_name: redis
    ports:
      - '6380:6379'
    restart: always
  redis-insight:
    platform: linux/amd64
    image: redis/redisinsight:2.60
    container_name: redis-insight
    ports:
      - '5540:5540'
    depends_on:
      - redis

  #  mongo:
  #    platform: linux/amd64
  #    container_name: mongodb
  #    image: 'mongo:4.2.16-bionic'
  #    ports:
  #      - '27017:27017'
  #    environment:
  #      MONGO_INITDB_DATABASE: notification
  #      MONGO_INITDB_ROOT_USERNAME: root
  #      MONGO_INITDB_ROOT_PASSWORD: Admin@123
  #    volumes:
  #      - ./db-data/mongo/:/data/db
  mongo:
    build:
      context: ./docker-images/mongodb
      dockerfile: Dockerfile
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-Admin@123}
  
  zipkin:
    platform: linux/amd64
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - '9411:9411'

volumes:
  postgres:
  pgadmin: